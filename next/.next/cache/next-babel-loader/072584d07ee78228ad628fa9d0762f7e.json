{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar _jsxFileName = \"/Users/olivier.ramier/work/src/apollo/frontend/next/pages/_app.tsx\";\nvar __jsx = React.createElement;\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport App from 'next/app';\nimport React from 'react';\nimport { Layout } from '../src/components/layout/Layout';\nimport client from '../src/graphql/client';\n\nclass MyApp extends App {\n  // Only uncomment this method if you have blocking data requirements for\n  // every single page in your application. This disables the ability to\n  // perform automatic static optimization, causing every page in your app to\n  // be server-side rendered.\n  //\n  // static async getInitialProps(appContext) {\n  //   // calls page's `getInitialProps` and fills `appProps.pageProps`\n  //   const appProps = await App.getInitialProps(appContext);\n  //\n  //   return { ...appProps }\n  // }\n  render() {\n    const {\n      Component,\n      pageProps\n    } = this.props;\n    return __jsx(ApolloProvider, {\n      client: client,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, __jsx(Layout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, __jsx(Component, _extends({}, pageProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default MyApp;","map":{"version":3,"sources":["/Users/olivier.ramier/work/src/apollo/frontend/next/pages/_app.tsx"],"names":["ApolloProvider","App","React","Layout","client","MyApp","render","Component","pageProps","props"],"mappings":";;;AAAA,SAASA,cAAT,QAA+B,qBAA/B;AACA,OAAOC,GAAP,MAAgB,UAAhB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,MAAT,QAAuB,iCAAvB;AACA,OAAOC,MAAP,MAAmB,uBAAnB;;AAEA,MAAMC,KAAN,SAAoBJ,GAApB,CAAwB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAK,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,SAAF;AAAaC,MAAAA;AAAb,QAA2B,KAAKC,KAAtC;AACA,WACE,MAAC,cAAD;AAAgB,MAAA,MAAM,EAAEL,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,SAAD,eAAeI,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF,CADF,CADF;AAOD;;AAtBqB;;AAyBxB,eAAeH,KAAf","sourcesContent":["import { ApolloProvider } from '@apollo/react-hooks';\nimport App from 'next/app';\nimport React from 'react';\n\nimport { Layout } from '../src/components/layout/Layout';\nimport client from '../src/graphql/client';\n\nclass MyApp extends App {\n  // Only uncomment this method if you have blocking data requirements for\n  // every single page in your application. This disables the ability to\n  // perform automatic static optimization, causing every page in your app to\n  // be server-side rendered.\n  //\n  // static async getInitialProps(appContext) {\n  //   // calls page's `getInitialProps` and fills `appProps.pageProps`\n  //   const appProps = await App.getInitialProps(appContext);\n  //\n  //   return { ...appProps }\n  // }\n\n  render() {\n    const { Component, pageProps } = this.props;\n    return (\n      <ApolloProvider client={client}>\n        <Layout>\n          <Component {...pageProps} />\n        </Layout>\n      </ApolloProvider>\n    );\n  }\n}\n\nexport default MyApp;\n"]},"metadata":{},"sourceType":"module"}