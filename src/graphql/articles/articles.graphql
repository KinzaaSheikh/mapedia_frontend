fragment ArticleViewerData on Article {
  _id
  key
  title
  content
  contentType
  author {
    key
    displayName
  }
}

fragment ArticlePreviewData on Article {
  _id
  key
  title
  contentType
  author {
    key
  }
}

mutation createArticle($payload: CreateArticlePayload!) {
  createArticle(payload: $payload) {
    _id
    key
    contentType
    title
    content
  }
}

query getArticleByKey($key: String!) {
  getArticle(key: $key) {
    ...ArticleViewerData
  }
}

mutation updateArticle($id: String!, $payload: UpdateArticlePayload!) {
  updateArticle(id: $id, payload: $payload) {
    ...ArticleViewerData
  }
}

mutation deleteArticle($id: String!) {
  deleteArticle(id: $id) {
    _id
    key
  }
}

query listUserArticlePreviews($userKey: String!, $options: ListArticlesOptions!) {
  getUser(key: $userKey) {
    displayName
    articles(options: $options) {
      items {
        ...ArticlePreviewData
      }
    }
  }
}
