fragment ConceptData on Concept {
  _id
  name
  description
}

mutation addConceptToDomain($domainId: String!, $payload: CreateConceptPayload!) {
  addConceptToDomain(domainId: $domainId, payload: $payload) {
    ...ConceptData
  }
}

mutation updateConcept($_id: String!, $payload: UpdateConceptPayload!) {
  updateConcept(_id: $_id, payload: $payload) {
    ...ConceptData
  }
}

mutation deleteConcept($_id: String!) {
  deleteConcept(_id: $_id) {
    _id
    success
  }
}

query getConcept($_id: String!) {
  getConcept(_id: $_id) {
    ...ConceptData
    coveredByResources(options: {}) {
      items {
        _id
        name
        type
      }
    }
  }
}

query listDomainConcepts($domainKey: String!, $options: DomainConceptsOptions!) {
  getDomainByKey(key: $domainKey) {
    _id
    name
    concepts(options: $options) {
      items {
        ...ConceptData
      }
    }
  }
}
